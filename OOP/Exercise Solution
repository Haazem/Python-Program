'''
#OOP Exercise 1: Create a Class with instance attributes

class Vehicle:
    def __init__(self , max_speed , mileage):
        self.max_speed = max_speed
        self.mileage = mileage

car = Vehicle(400 , 500)
print(car.max_speed)
print(car.mileage)
'''

'''
#OOP Exercise 2: Create a Vehicle class without any
#variables and methods

class Vehicle:
    def __init__(self):
        pass 
'''

'''
#OOP Exercise 3: Create a child class Bus that will inherit
#all of the variables and methods of the Vehicle class

class Vehicle:
     def __init__(self ,name ,  max_speed , mileage):
         self.name = name
         self.max_speed = max_speed
         self.mileage = mileage

class Bus(Vehicle):
    pass

bus1 = Bus("School Volvo" , 180  , 12)
print(f"Vehicle Name {bus1.name} Speed {bus1.max_speed} Mileage {bus1.mileage}")

'''



'''
#OOP Exercise 4: Class Inheritance

class Vehicle:
    def __init__(self , name , max_speed , mileage):
        self.name = name
        self.max_speed = max_speed
        self.mileage = mileage

    def seating_capacity(self , capacity):
        return f"The seating capacity of {self.name} is {capacity} passengers"

class Bus(Vehicle):

    def seating_capacity(self , capacity = 50):
        return super().seating_capacity(capacity)

v1 = Vehicle("Vehicle" , 100 , 300)
#print(v1.seating_capacity(50))
bus1 = Bus("Bus" , 200 , 400)
#print(f"Vehicle Name {bus1.name} Speed {bus1.max_speed} Mileage {bus1.mileage}")
print(bus1.seating_capacity())
'''

'''
#OOP Exercise 5: Define a property that must have the
#same value for every class instance (object)

class Vehicle:
    color = "White"
    def __init__(self , name , max_speed , mileage):
        self.name = name
        self.max_speed = max_speed
        self.mileage = mileage

    def print_info(self):
        print(f"Name {self.name} Max Speed: {self.max_speed} Mileage: {self.mileage} Color {self.color}")

class Bus(Vehicle):
    pass

class Car(Vehicle):
    pass

v1 = Vehicle("Vehicle" , 100 , 200)
#print(v1.name , v1.max_speed , v1.mileage)
#v1.print_info()

bus = Bus("Bus" , 400 , 500)
bus.print_info()

car = Car("Car" , 400 , 500)
car.print_info()
'''

'''
#OOP Exercise 6: Class Inheritance
class Vehicle:
    def __init__(self , name , mileage , capacity):
        self.name = name
        self.mileage = mileage
        self.capacity = capacity

    def fare(self):
        return self.capacity * 100

class Bus(Vehicle):
    def fare(self ):
        return super().fare() + (0.1 * super().fare())

School_bus = Bus("School Volvo", 12, 50)
print(School_bus.fare())
'''


'''
#OOP Exercise 7: Check type of an object

class Vehicle:
    def __init__(self , name , mileage , capacity):
        self.name = name
        self.mileage = mileage
        self.capacity = capacity

class Bus(Vehicle):
    pass

vehicle1 = Vehicle("Vehicle" , 400 , 700)
print(type(vehicle1))
school_bus = Bus("School Volvo", 12, 50)
print(type(school_bus))
'''

'''
#OOP Exercise 8: Determine if School_bus is also an
#instance of the Vehicle class

class Vehicle:
    def __init__(self , name , mileage , capacity):
        self.name = name
        self.mileage = mileage
        self.capacity = capacity

class Bus(Vehicle):
    pass

School_bus = Bus("School Volvo", 12, 50)

print(isinstance(School_bus , Vehicle))
print(isinstance(School_bus , Bus))
'''







